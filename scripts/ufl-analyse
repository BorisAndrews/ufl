#!/usr/bin/env python

import sys
from ufl.algorithms import FormData, load_forms, validate_form, ufl2latex, tree_format

# Get commandline options
args = sys.argv[1:]
if not args:
    print "Expecting .ufl file names."
    sys.exit(-1)
filenames = args

quiet = True # TODO: Make this an commandline argument

# Handle each form file separately
for filename in args:
    print
    if not filename.endswith(".ufl"):
        print "Warning: Filename '%s' doesn't end with .ufl." % filename

    # Load form file, which triggers many consistency
    # checks while the form is being built
    print "Loading form file '%s'" % filename
    forms = load_forms(filename)
    formdatas = [f.form_data() for f in forms]

    # Analyse validity of forms
    for fd in formdatas:
        form = fd.form
        name = fd.name
        
        errors = validate_form(form)
        print
        if errors:
            print "Found errors in form '%s':" % name
            print errors
        else:
            print "Found no errors in form '%s'." % name
    
    # Print information about all forms
    for fd in formdatas:
        form = fd.form
        name = fd.name
        
        # Pretty-print form information
        print
        print "Form data:"
        print str(fd)
        
        r = repr(form)
        if not quiet:
            print "\nForm representation:\n", r
        
        s = str(form)
        if not quiet:
            print "\nForm pretty-print:\n", s
        
        tree = tree_format(form)
        if not quiet:
            print "\nForm tree formatting:\n", tree
        
        latex = ufl2latex(form)
        if not quiet:
            print "\nForm LaTeX code:\n", latex
    print

